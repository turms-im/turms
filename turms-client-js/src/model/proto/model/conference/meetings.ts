// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.2
// source: model/conference/meetings.proto

/* eslint-disable */
import _m0 from "protobufjs/minimal";
import { Meeting } from "./meeting";

export const protobufPackage = "im.turms.proto";

export interface Meetings {
  meetings: Meeting[];
}

function createBaseMeetings(): Meetings {
  return { meetings: [] };
}

export const Meetings = {
  encode(message: Meetings, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.meetings) {
      Meeting.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Meetings {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMeetings();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.meetings.push(Meeting.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },
};
