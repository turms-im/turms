// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: request/user/update_user_request.proto
// Protobuf C++ Version: 5.27.2

#include "turms/client/model/proto/request/user/update_user_request.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {

inline constexpr UpdateUserRequest::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0},
      user_defined_attributes_{},
      custom_attributes_{},
      password_(&::google::protobuf::internal::fixed_address_empty_string,
                ::_pbi::ConstantInitialized()),
      name_(&::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
      intro_(&::google::protobuf::internal::fixed_address_empty_string,
             ::_pbi::ConstantInitialized()),
      profile_picture_(&::google::protobuf::internal::fixed_address_empty_string,
                       ::_pbi::ConstantInitialized()),
      profile_access_strategy_{
          static_cast<::turms::client::model::proto::ProfileAccessStrategy>(0)} {
}

template <typename>
PROTOBUF_CONSTEXPR UpdateUserRequest::UpdateUserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateUserRequestDefaultTypeInternal {
    PROTOBUF_CONSTEXPR UpdateUserRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {
    }
    ~UpdateUserRequestDefaultTypeInternal() {
    }
    union {
        UpdateUserRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    UpdateUserRequestDefaultTypeInternal _UpdateUserRequest_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

// ===================================================================

class UpdateUserRequest::_Internal {
   public:
    using HasBits = decltype(std::declval<UpdateUserRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_._has_bits_);
};

void UpdateUserRequest::clear_user_defined_attributes() {
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.user_defined_attributes_.Clear();
}
void UpdateUserRequest::clear_custom_attributes() {
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.custom_attributes_.Clear();
}
UpdateUserRequest::UpdateUserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.UpdateUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena,
    const Impl_& from,
    const ::turms::client::model::proto::UpdateUserRequest& from_msg)
    : _has_bits_{from._has_bits_},
      _cached_size_{0},
      user_defined_attributes_{visibility, arena, from.user_defined_attributes_},
      custom_attributes_{visibility, arena, from.custom_attributes_},
      password_(arena, from.password_),
      name_(arena, from.name_),
      intro_(arena, from.intro_),
      profile_picture_(arena, from.profile_picture_) {
}

UpdateUserRequest::UpdateUserRequest(::google::protobuf::Arena* arena,
                                     const UpdateUserRequest& from)
    : ::google::protobuf::MessageLite(arena) {
    UpdateUserRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
    new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    _impl_.profile_access_strategy_ = from._impl_.profile_access_strategy_;

    // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.UpdateUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena)
    : _cached_size_{0},
      user_defined_attributes_{visibility, arena},
      custom_attributes_{visibility, arena},
      password_(arena),
      name_(arena),
      intro_(arena),
      profile_picture_(arena) {
}

inline void UpdateUserRequest::SharedCtor(::_pb::Arena* arena) {
    new (&_impl_) Impl_(internal_visibility(), arena);
    _impl_.profile_access_strategy_ = {};
}
UpdateUserRequest::~UpdateUserRequest() {
    // @@protoc_insertion_point(destructor:turms.client.model.proto.UpdateUserRequest)
    _internal_metadata_.Delete<std::string>();
    SharedDtor();
}
inline void UpdateUserRequest::SharedDtor() {
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.password_.Destroy();
    _impl_.name_.Destroy();
    _impl_.intro_.Destroy();
    _impl_.profile_picture_.Destroy();
    _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData* UpdateUserRequest::GetClassData() const {
    PROTOBUF_CONSTINIT static const ClassDataLite<43> _data_ = {
        {
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_._cached_size_),
            true,
        },
        "turms.client.model.proto.UpdateUserRequest",
    };

    return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<3, 7, 3, 106, 2>
    UpdateUserRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_._has_bits_),
            0,  // no _extensions_
            15,
            56,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294950848,  // skipmap
            offsetof(decltype(_table_), field_entries),
            7,  // num_field_entries
            3,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries),
            &_UpdateUserRequest_default_instance_._instance,
            nullptr,                                // post_loop_handler
            ::_pbi::TcParser::GenericFallbackLite,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::turms::client::model::proto::UpdateUserRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
            // optional string password = 1;
            {::_pbi::TcParser::FastUS1,
             {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.password_)}},
            // optional string name = 2;
            {::_pbi::TcParser::FastUS1,
             {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.name_)}},
            // optional string intro = 3;
            {::_pbi::TcParser::FastUS1,
             {26, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.intro_)}},
            // optional string profile_picture = 4;
            {::_pbi::TcParser::FastUS1,
             {34, 3, 0, PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.profile_picture_)}},
            // optional .turms.client.model.proto.ProfileAccessStrategy profile_access_strategy = 5;
            {::_pbi::TcParser::FastV32S1,
             {40, 4, 0, PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.profile_access_strategy_)}},
            {::_pbi::TcParser::MiniParse, {}},
            // repeated .turms.client.model.proto.Value custom_attributes = 15;
            {::_pbi::TcParser::FastMtR1,
             {122, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.custom_attributes_)}},
        }},
        {{65535, 65535}},
        {{
            // optional string password = 1;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.password_),
             _Internal::kHasBitsOffset + 0,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // optional string name = 2;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.name_),
             _Internal::kHasBitsOffset + 1,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // optional string intro = 3;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.intro_),
             _Internal::kHasBitsOffset + 2,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // optional string profile_picture = 4;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.profile_picture_),
             _Internal::kHasBitsOffset + 3,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // optional .turms.client.model.proto.ProfileAccessStrategy profile_access_strategy = 5;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.profile_access_strategy_),
             _Internal::kHasBitsOffset + 4,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
            // map<string, .turms.client.model.proto.Value> user_defined_attributes = 6;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.user_defined_attributes_),
             -1,
             1,
             (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
            // repeated .turms.client.model.proto.Value custom_attributes = 15;
            {PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.custom_attributes_),
             -1,
             0,
             (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<::turms::client::model::proto::Value>()},
            {::_pbi::TcParser::GetMapAuxInfo<
                decltype(UpdateUserRequest()._impl_.user_defined_attributes_)>(1, 0, 0, 9, 11)},
            {::_pbi::TcParser::CreateInArenaStorageCb<::turms::client::model::proto::Value>},
        }},
        {{"\52\10\4\5\17\0\27\0"
          "turms.client.model.proto.UpdateUserRequest"
          "password"
          "name"
          "intro"
          "profile_picture"
          "user_defined_attributes"}},
};

PROTOBUF_NOINLINE void UpdateUserRequest::Clear() {
    // @@protoc_insertion_point(message_clear_start:turms.client.model.proto.UpdateUserRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.user_defined_attributes_.Clear();
    _impl_.custom_attributes_.Clear();
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x0000000fu) {
        if (cached_has_bits & 0x00000001u) {
            _impl_.password_.ClearNonDefaultToEmpty();
        }
        if (cached_has_bits & 0x00000002u) {
            _impl_.name_.ClearNonDefaultToEmpty();
        }
        if (cached_has_bits & 0x00000004u) {
            _impl_.intro_.ClearNonDefaultToEmpty();
        }
        if (cached_has_bits & 0x00000008u) {
            _impl_.profile_picture_.ClearNonDefaultToEmpty();
        }
    }
    _impl_.profile_access_strategy_ = 0;
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<std::string>();
}

::uint8_t* UpdateUserRequest::_InternalSerialize(
    ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.UpdateUserRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
        const std::string& _s = this->_internal_password();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(),
            static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "turms.client.model.proto.UpdateUserRequest.password");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    // optional string name = 2;
    if (cached_has_bits & 0x00000002u) {
        const std::string& _s = this->_internal_name();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(),
            static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "turms.client.model.proto.UpdateUserRequest.name");
        target = stream->WriteStringMaybeAliased(2, _s, target);
    }

    // optional string intro = 3;
    if (cached_has_bits & 0x00000004u) {
        const std::string& _s = this->_internal_intro();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(),
            static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "turms.client.model.proto.UpdateUserRequest.intro");
        target = stream->WriteStringMaybeAliased(3, _s, target);
    }

    // optional string profile_picture = 4;
    if (cached_has_bits & 0x00000008u) {
        const std::string& _s = this->_internal_profile_picture();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(),
            static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "turms.client.model.proto.UpdateUserRequest.profile_picture");
        target = stream->WriteStringMaybeAliased(4, _s, target);
    }

    // optional .turms.client.model.proto.ProfileAccessStrategy profile_access_strategy = 5;
    if (cached_has_bits & 0x00000010u) {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteEnumToArray(
            5, this->_internal_profile_access_strategy(), target);
    }

    // map<string, .turms.client.model.proto.Value> user_defined_attributes = 6;
    if (!_internal_user_defined_attributes().empty()) {
        using MapType = ::google::protobuf::Map<std::string, ::turms::client::model::proto::Value>;
        using WireHelper = _pbi::MapEntryFuncs<std::string,
                                               ::turms::client::model::proto::Value,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>;
        const auto& field = _internal_user_defined_attributes();

        if (stream->IsSerializationDeterministic() && field.size() > 1) {
            for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target =
                    WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(),
                    static_cast<int>(entry.first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "turms.client.model.proto.UpdateUserRequest.user_defined_attributes");
            }
        } else {
            for (const auto& entry : field) {
                target =
                    WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(),
                    static_cast<int>(entry.first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "turms.client.model.proto.UpdateUserRequest.user_defined_attributes");
            }
        }
    }

    // repeated .turms.client.model.proto.Value custom_attributes = 15;
    for (unsigned i = 0, n = static_cast<unsigned>(this->_internal_custom_attributes_size()); i < n;
         i++) {
        const auto& repfield = this->_internal_custom_attributes().Get(i);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(), target, stream);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        target = stream->WriteRaw(
            _internal_metadata_
                .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                .data(),
            static_cast<int>(
                _internal_metadata_
                    .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                    .size()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.UpdateUserRequest)
    return target;
}

::size_t UpdateUserRequest::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.UpdateUserRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
    // map<string, .turms.client.model.proto.Value> user_defined_attributes = 6;
    total_size +=
        1 * ::google::protobuf::internal::FromIntSize(_internal_user_defined_attributes_size());
    for (const auto& entry : _internal_user_defined_attributes()) {
        total_size +=
            _pbi::MapEntryFuncs<std::string,
                                ::turms::client::model::proto::Value,
                                _pbi::WireFormatLite::TYPE_STRING,
                                _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first,
                                                                                  entry.second);
    }
    // repeated .turms.client.model.proto.Value custom_attributes = 15;
    total_size += 1UL * this->_internal_custom_attributes_size();
    for (const auto& msg : this->_internal_custom_attributes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
    }
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x0000001fu) {
        // optional string password = 1;
        if (cached_has_bits & 0x00000001u) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->_internal_password());
        }

        // optional string name = 2;
        if (cached_has_bits & 0x00000002u) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->_internal_name());
        }

        // optional string intro = 3;
        if (cached_has_bits & 0x00000004u) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->_internal_intro());
        }

        // optional string profile_picture = 4;
        if (cached_has_bits & 0x00000008u) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->_internal_profile_picture());
        }

        // optional .turms.client.model.proto.ProfileAccessStrategy profile_access_strategy = 5;
        if (cached_has_bits & 0x00000010u) {
            total_size +=
                1 + ::_pbi::WireFormatLite::EnumSize(this->_internal_profile_access_strategy());
        }
    }
    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        total_size += _internal_metadata_
                          .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                          .size();
    }
    _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
    return total_size;
}

void UpdateUserRequest::CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from) {
    MergeFrom(*::_pbi::DownCast<const UpdateUserRequest*>(&from));
}

void UpdateUserRequest::MergeFrom(const UpdateUserRequest& from) {
    UpdateUserRequest* const _this = this;
    // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.UpdateUserRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_impl_.user_defined_attributes_.MergeFrom(from._impl_.user_defined_attributes_);
    _this->_internal_mutable_custom_attributes()->MergeFrom(from._internal_custom_attributes());
    cached_has_bits = from._impl_._has_bits_[0];
    if (cached_has_bits & 0x0000001fu) {
        if (cached_has_bits & 0x00000001u) {
            _this->_internal_set_password(from._internal_password());
        }
        if (cached_has_bits & 0x00000002u) {
            _this->_internal_set_name(from._internal_name());
        }
        if (cached_has_bits & 0x00000004u) {
            _this->_internal_set_intro(from._internal_intro());
        }
        if (cached_has_bits & 0x00000008u) {
            _this->_internal_set_profile_picture(from._internal_profile_picture());
        }
        if (cached_has_bits & 0x00000010u) {
            _this->_impl_.profile_access_strategy_ = from._impl_.profile_access_strategy_;
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UpdateUserRequest::CopyFrom(const UpdateUserRequest& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.UpdateUserRequest)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

void UpdateUserRequest::InternalSwap(UpdateUserRequest* PROTOBUF_RESTRICT other) {
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    _impl_.user_defined_attributes_.InternalSwap(&other->_impl_.user_defined_attributes_);
    _impl_.custom_attributes_.InternalSwap(&other->_impl_.custom_attributes_);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.intro_, &other->_impl_.intro_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(
        &_impl_.profile_picture_, &other->_impl_.profile_picture_, arena);
    swap(_impl_.profile_access_strategy_, other->_impl_.profile_access_strategy_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"