// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: model/common/value.proto
// Protobuf C++ Version: 5.27.2

#include "turms/client/model/proto/model/common/value.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {

inline constexpr Value::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : list_value_{},
      kind_{},
      _cached_size_{0},
      _oneof_case_{} {
}

template <typename>
PROTOBUF_CONSTEXPR Value::Value(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {
}
struct ValueDefaultTypeInternal {
    PROTOBUF_CONSTEXPR ValueDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {
    }
    ~ValueDefaultTypeInternal() {
    }
    union {
        Value _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

class Value::_Internal {
   public:
    static constexpr ::int32_t kOneofCaseOffset =
        PROTOBUF_FIELD_OFFSET(::turms::client::model::proto::Value, _impl_._oneof_case_);
};

Value::Value(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.Value)
}
inline PROTOBUF_NDEBUG_INLINE Value::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena,
    const Impl_& from,
    const ::turms::client::model::proto::Value& from_msg)
    : list_value_{visibility, arena, from.list_value_},
      kind_{},
      _cached_size_{0},
      _oneof_case_{from._oneof_case_[0]} {
}

Value::Value(::google::protobuf::Arena* arena, const Value& from)
    : ::google::protobuf::MessageLite(arena) {
    Value* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
    new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    switch (kind_case()) {
        case KIND_NOT_SET:
            break;
        case kInt32Value:
            _impl_.kind_.int32_value_ = from._impl_.kind_.int32_value_;
            break;
        case kInt64Value:
            _impl_.kind_.int64_value_ = from._impl_.kind_.int64_value_;
            break;
        case kFloatValue:
            _impl_.kind_.float_value_ = from._impl_.kind_.float_value_;
            break;
        case kDoubleValue:
            _impl_.kind_.double_value_ = from._impl_.kind_.double_value_;
            break;
        case kBoolValue:
            _impl_.kind_.bool_value_ = from._impl_.kind_.bool_value_;
            break;
        case kBytesValue:
            new (&_impl_.kind_.bytes_value_) decltype(_impl_.kind_.bytes_value_){
                arena, from._impl_.kind_.bytes_value_};
            break;
        case kStringValue:
            new (&_impl_.kind_.string_value_) decltype(_impl_.kind_.string_value_){
                arena, from._impl_.kind_.string_value_};
            break;
    }

    // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.Value)
}
inline PROTOBUF_NDEBUG_INLINE Value::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena)
    : list_value_{visibility, arena},
      kind_{},
      _cached_size_{0},
      _oneof_case_{} {
}

inline void Value::SharedCtor(::_pb::Arena* arena) {
    new (&_impl_) Impl_(internal_visibility(), arena);
}
Value::~Value() {
    // @@protoc_insertion_point(destructor:turms.client.model.proto.Value)
    _internal_metadata_.Delete<std::string>();
    SharedDtor();
}
inline void Value::SharedDtor() {
    ABSL_DCHECK(GetArena() == nullptr);
    if (has_kind()) {
        clear_kind();
    }
    _impl_.~Impl_();
}

void Value::clear_kind() {
    // @@protoc_insertion_point(one_of_clear_start:turms.client.model.proto.Value)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    switch (kind_case()) {
        case kInt32Value: {
            // No need to clear
            break;
        }
        case kInt64Value: {
            // No need to clear
            break;
        }
        case kFloatValue: {
            // No need to clear
            break;
        }
        case kDoubleValue: {
            // No need to clear
            break;
        }
        case kBoolValue: {
            // No need to clear
            break;
        }
        case kBytesValue: {
            _impl_.kind_.bytes_value_.Destroy();
            break;
        }
        case kStringValue: {
            _impl_.kind_.string_value_.Destroy();
            break;
        }
        case KIND_NOT_SET: {
            break;
        }
    }
    _impl_._oneof_case_[0] = KIND_NOT_SET;
}

const ::google::protobuf::MessageLite::ClassData* Value::GetClassData() const {
    PROTOBUF_CONSTINIT static const ClassDataLite<31> _data_ = {
        {
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            PROTOBUF_FIELD_OFFSET(Value, _impl_._cached_size_),
            true,
        },
        "turms.client.model.proto.Value",
    };

    return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 8, 1, 59, 2>
    Value::_table_ = {
        {
            0,  // no _has_bits_
            0,  // no _extensions_
            8,
            0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967040,  // skipmap
            offsetof(decltype(_table_), field_entries),
            8,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries),
            &_Value_default_instance_._instance,
            nullptr,                                // post_loop_handler
            ::_pbi::TcParser::GenericFallbackLite,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::turms::client::model::proto::Value>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // repeated .turms.client.model.proto.Value list_value = 8;
            {::_pbi::TcParser::FastMtR1,
             {66, 63, 0, PROTOBUF_FIELD_OFFSET(Value, _impl_.list_value_)}},
        }},
        {{65535, 65535}},
        {{
            // int32 int32_value = 1;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.int32_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
            // int64 int64_value = 2;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.int64_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
            // float float_value = 3;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.float_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
            // double double_value = 4;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.double_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
            // bool bool_value = 5;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.bool_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kBool)},
            // bytes bytes_value = 6;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.bytes_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
            // string string_value = 7;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.kind_.string_value_),
             _Internal::kOneofCaseOffset + 0,
             0,
             (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // repeated .turms.client.model.proto.Value list_value = 8;
            {PROTOBUF_FIELD_OFFSET(Value, _impl_.list_value_),
             0,
             0,
             (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<::turms::client::model::proto::Value>()},
        }},
        {{"\36\0\0\0\0\0\0\14\0\0\0\0\0\0\0\0"
          "turms.client.model.proto.Value"
          "string_value"}},
};

PROTOBUF_NOINLINE void Value::Clear() {
    // @@protoc_insertion_point(message_clear_start:turms.client.model.proto.Value)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.list_value_.Clear();
    clear_kind();
    _internal_metadata_.Clear<std::string>();
}

::uint8_t* Value::_InternalSerialize(::uint8_t* target,
                                     ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.Value)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    switch (kind_case()) {
        case kInt32Value: {
            target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
                stream, this->_internal_int32_value(), target);
            break;
        }
        case kInt64Value: {
            target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
                stream, this->_internal_int64_value(), target);
            break;
        }
        case kFloatValue: {
            target = stream->EnsureSpace(target);
            target =
                ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_float_value(), target);
            break;
        }
        case kDoubleValue: {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this->_internal_double_value(), target);
            break;
        }
        case kBoolValue: {
            target = stream->EnsureSpace(target);
            target =
                ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_bool_value(), target);
            break;
        }
        case kBytesValue: {
            const std::string& _s = this->_internal_bytes_value();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
            break;
        }
        case kStringValue: {
            const std::string& _s = this->_internal_string_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(),
                static_cast<int>(_s.length()),
                ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                "turms.client.model.proto.Value.string_value");
            target = stream->WriteStringMaybeAliased(7, _s, target);
            break;
        }
        default:
            break;
    }
    // repeated .turms.client.model.proto.Value list_value = 8;
    for (unsigned i = 0, n = static_cast<unsigned>(this->_internal_list_value_size()); i < n; i++) {
        const auto& repfield = this->_internal_list_value().Get(i);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(), target, stream);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        target = stream->WriteRaw(
            _internal_metadata_
                .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                .data(),
            static_cast<int>(
                _internal_metadata_
                    .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                    .size()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.Value)
    return target;
}

::size_t Value::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.Value)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
    // repeated .turms.client.model.proto.Value list_value = 8;
    total_size += 1UL * this->_internal_list_value_size();
    for (const auto& msg : this->_internal_list_value()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
    }
    switch (kind_case()) {
        // int32 int32_value = 1;
        case kInt32Value: {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_int32_value());
            break;
        }
        // int64 int64_value = 2;
        case kInt64Value: {
            total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_value());
            break;
        }
        // float float_value = 3;
        case kFloatValue: {
            total_size += 5;
            break;
        }
        // double double_value = 4;
        case kDoubleValue: {
            total_size += 9;
            break;
        }
        // bool bool_value = 5;
        case kBoolValue: {
            total_size += 2;
            break;
        }
        // bytes bytes_value = 6;
        case kBytesValue: {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                  this->_internal_bytes_value());
            break;
        }
        // string string_value = 7;
        case kStringValue: {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->_internal_string_value());
            break;
        }
        case KIND_NOT_SET: {
            break;
        }
    }
    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        total_size += _internal_metadata_
                          .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                          .size();
    }
    _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
    return total_size;
}

void Value::CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from) {
    MergeFrom(*::_pbi::DownCast<const Value*>(&from));
}

void Value::MergeFrom(const Value& from) {
    Value* const _this = this;
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.Value)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_internal_mutable_list_value()->MergeFrom(from._internal_list_value());
    if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
        const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
        const bool oneof_needs_init = oneof_to_case != oneof_from_case;
        if (oneof_needs_init) {
            if (oneof_to_case != 0) {
                _this->clear_kind();
            }
            _this->_impl_._oneof_case_[0] = oneof_from_case;
        }

        switch (oneof_from_case) {
            case kInt32Value: {
                _this->_impl_.kind_.int32_value_ = from._impl_.kind_.int32_value_;
                break;
            }
            case kInt64Value: {
                _this->_impl_.kind_.int64_value_ = from._impl_.kind_.int64_value_;
                break;
            }
            case kFloatValue: {
                _this->_impl_.kind_.float_value_ = from._impl_.kind_.float_value_;
                break;
            }
            case kDoubleValue: {
                _this->_impl_.kind_.double_value_ = from._impl_.kind_.double_value_;
                break;
            }
            case kBoolValue: {
                _this->_impl_.kind_.bool_value_ = from._impl_.kind_.bool_value_;
                break;
            }
            case kBytesValue: {
                if (oneof_needs_init) {
                    _this->_impl_.kind_.bytes_value_.InitDefault();
                }
                _this->_impl_.kind_.bytes_value_.Set(from._internal_bytes_value(), arena);
                break;
            }
            case kStringValue: {
                if (oneof_needs_init) {
                    _this->_impl_.kind_.string_value_.InitDefault();
                }
                _this->_impl_.kind_.string_value_.Set(from._internal_string_value(), arena);
                break;
            }
            case KIND_NOT_SET:
                break;
        }
    }
    _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Value::CopyFrom(const Value& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.Value)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

void Value::InternalSwap(Value* PROTOBUF_RESTRICT other) {
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.list_value_.InternalSwap(&other->_impl_.list_value_);
    swap(_impl_.kind_, other->_impl_.kind_);
    swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"